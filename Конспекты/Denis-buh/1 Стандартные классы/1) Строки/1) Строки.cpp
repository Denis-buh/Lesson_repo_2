



#include <iostream>
using namespace std;
#include <string> // Это чтобы работать со строками


int main()
{
    system("chcp 1251"); 

    /*Escape - последовательности - данные штуки используются во всех языках. Необходимы для текста
    
    \b - Удаление последнего выделеного символа
    \n - enter
    \t - tab

    \\ - Вывести \ (обратную черту)
    \" - Вывести кавычку "
    \' - Вывести кавычку '
    */
    // char - 1 байт (Значения: [128 до 127] или [0 до 255])
    char sim = 'f'; // Так создается переменная с символом 
    cout << sim << "\n";

    // wchar_t - 2 байт (Значения: [0 до 65 535])
    wchar_t name_wchar_t = {'A'}; 
    wcout << name_wchar_t << "\n"; // Без wcout будет выводить номер символа по юникоду 

    // char16_t - 2 байт (Значения: [0 до 65 535])
    char16_t name_char16_t = {u'A'};
    wcout << name_char16_t << "\n"; // Вывод невозможен

    // char32_t - 4 байт (Значения: [0 до 4 294 967 295])
    char32_t name_char32_t = {U'B'};
    wcout << name_char32_t << "\n"; // Вывод невозможен

    string name = "Alex"; // Так создается переменная с текстом
    cout << name << "\n";

    // '' - данные кавычки создают символ. Аналог: 'символ'
    // "" - данные кавычки создают текст. Аналог: 'символ' + "\0". \0 - терминатор (символ завершения строки)
    // Интерменирующий ноль (\0) - необходим чтобы прога монимала где конец строки (массива char)
 
    char arr_sim[] = "My string"; // Массив из символов "" - добавляют \0 в конец строки
    cout << arr_sim << "\n";

    char arr_chars[] = {'M', 'y', ' ', 's', 't', 'r', 'i', 'n', 'g', 's', '\0'};
    cout << size(arr_chars) << "\n"; // size() - замерает количество элементов в массиве



    string vords[] = {"Hello", "world", "test"}; // Масив строк
    for (string i : vords){
        cout << i << "(" << size(i) << ")" << " "; // size() - замерает количество символов в строке
    }
    cout << "\n";
    cout << vords[0] + " " + vords[1] << "\n"; // Конкатенация строк для нормального человека
    system("pause");
}



