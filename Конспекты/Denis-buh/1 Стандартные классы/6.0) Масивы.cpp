



#include <iostream>
using namespace std;


int main()
{
    system("chcp 1251");

    /*
    Массивы - совокупность переменных позволяющая хранить несколько однотипных значений
    Каждая переменная составляющая массив является элементом этого массива
    Индекс - порядковый номер элементамасива
    Массив не может хранить переменные разных типов
    Любой массив представляет из себя указатель
    Количество элементов массива <= размер массива (если размеры не совпадут то он возьмет мусор из памяти)
    */
    // Обьявление массива: тип_данных_массива имя_массива[количество_эллементов_массива]; // без инициализации
    // Обьявление массива: тип_данных_массива имя_массива[количество_эллементов_массива] = {"что хотим положить в массив через запятую"}; // с инициализацией
    // Обьявление массива: тип_данных_массива имя_массива[] = {"что хотим положить в массив через запятую"}; // с инициализацией


    // Обьявляем целочисленный массив (без инициализации)
    int numbers[4];
    // После создания массива в нем находится муссор из оператоса
    // Порядок заполнения массива может быть любой
    numbers[0] = 1;
    numbers[1] = 2;
    numbers[2] = 3;
    numbers[3] = 4;

    // Выводим эллемент массива
    cout << numbers[2] << "\n";

    // Вводить и выводить значения из массива можно только по существующим индексам (от 0  до количество_эллементов_массива - 1)
    // Иначе будет какая-то хуйня

    // Обьявляем целочисленный массив 
    int new_numbers[] = {1, 2, 3, 4}; // по новой форме: int new_numbers[]{1, 2, 3, 4};
    // При создании массива с инициализацией не обязательно вводить количество элементов


    // Обход массива с помощью цикла
    const int len_arr = 4;
    int arr[4];
    // Просто arr ссылается на адрес первого элемента в списке
    for (int i = 0; i < len_arr; i += 1){
        arr[i] = (i + 1); // Заполняем массив
        cout << "Элемент под индексом: " << i << " в массиве arr = " << arr[i] << "\n"; // Выводим значения массива
    }

    // Пример с узнаванием длины массива
    int super_numbers[] = {2, 4, 5, 6, 7, 8, 45};

    cout << "Длина массива (количество элементов): " << sizeof(super_numbers) / sizeof(super_numbers[0]) << "\n";
    // Мы делили на sizeof(int) так как sizeof(super_numbers) = "Количество элементов в масиве" * sizeof("Тип элементов в массиве")
    // size(super_numbers) - данная функция сразу вернет размер массива

    /*Многомерный массив
    Обьявление многомерного массива
    "тип данных массива" "имя массива"["Количество элементов для внешнего массива"]["Количество элементов для внутреннего массива"] = "Значения для массива"
    */
    int my_super_arr[3][2] = {
        {1, 2},
        {3, 4},
        {5}
    };
    // Элемент с индексом 2.1 - заполнен мусором
    cout << "Вывод многомерного массива:\n";
    for (int i = 0; i < 3; i += 1){
        for (int ii = 0; ii < 2; ii += 1){
            cout << my_super_arr[i][ii] << "\t";
        }
        cout << "\n";
    }
    /* Работа с мнгомерным массивом через ссылки
    for (auto& i : my_super_arr){
        for (auto& ii : i){
            cout << ii << "\t";
        }
        cout << "\n";
    }
    */

    system("pause");
}