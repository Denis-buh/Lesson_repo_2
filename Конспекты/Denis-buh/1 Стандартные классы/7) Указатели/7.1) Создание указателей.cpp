



#include <iostream>
using namespace std;


int main()
{
    system("chcp 1251");

    /*
    Указатели (*) - переменная содержащая адрес из озу какого либо значения/переменной. 
        Указатель хранит адрес переменной, и по этому адресу мы можем получить значение этой переменной. 

    Обьявление указателя: тип_данных_указателя* "имя_переменной" = &"Значение для указателя"; 

    Утечка памяти - процесс при котором неиспользуемые данные попросту занимают озу. 
        Данные данные необходимо удалять в ручную так как нет автаматического уборщика.
    Указатели не могут работать с переменными класса памети register
    & - операция аперсант (ввозращает адрес объекта из оперативы (ОЗУ))
    * - Операция разъименования (позволяет работать со значением (возращает значение из оператоса по адресу)). Эта операция позволяет получить объект по адресу, который хранится в указателе.
    */

    // Создание указателя ссылающевося на ячейку памяти 0 (пустая ячейка). 
    int* my_poun{nullptr}; // Аналог: int* my_poun{}; 
    // Для данного указателя не возможно изменить значение области ОЗУ так как перед этим указатель нужно сослать на область ОЗУ

    int a = 5;
    // Создание указателя ссылающевося на определенную область ОЗУ
    int* b = &a; // Указатель который ссылается на область озу где расположено значение переменной a (не тоже самое что приваивание).

    cout << "Адрес a / указателя b = " << b << "\n"; // Вывод адреса переменной a / указателя b  из озу
    // Операция разъименования (позволяет работать со значением (возращает значение из оператоса по адресу))
    cout << "Значение a / указателя b = " << *b << "\n"; // Вывод адреса переменной a / указателя b  из озу

    system("pause");
}