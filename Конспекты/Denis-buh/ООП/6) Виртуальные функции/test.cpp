

/*
Виртуальные функции обьявляются в классе родители и имеют приписку virtual 
Отличие от переопределения в том, что выбор метода для виртуальных методов 
    осуществляется на этапе выполнения (когда уже известен тип обьекта)
Выртуальная функция вызывается через указатель или ссылку
    на базовый класс. (можно и напрямую, но тогда не будет динамики)

Правила:
    1) Виртуальные методы наследуются (их можно переопределять)
    2) если виртуальный метод переопределен в производном классе, то обьекты 
    этого класса могут получить доступ к варианту метода базового класса с помощью 
    видимости
    3) Виртуальный метод не может быть статическим но может быть дружественным

    
*/

#include <iostream>

using namespace std;

class B{
protected:
    int x;
public:
    B(int x){
        this->x = x;
    }
    void print(){
        cout << this->x << "\n";
    }
    virtual void Fun(){
        this->x *= 2; 
    }
};


class P: public B{
public:
    P(int f): B(f){}
    // Тут переопределяем виртуальный метод 
    virtual void Fun(){ this->x /= 2;}
    
};



int main(){
    B b(10); 
    P d(10);
    b.print();
    d.print();
    cout << "Тута что-то меняем\n";
    // Указатель
    B *bb;
    bb = &d;
    // Виртуальная функция
    bb->Fun();
    bb->print();
    system("pause");
    return 0; 
}