

/*
Виртуальные функции обьявляются в классе родители и имеют приписку virtual 
Отличие от переопределения в том, что выбор метода для виртуальных методов 
    осуществляется на этапе выполнения (когда уже известен тип обьекта)
Выртуальная функция вызывается через указатель или ссылку
    на базовый класс. (можно и напрямую, но тогда не будет динамики)

Правила:
    1) Виртуальные методы наследуются (их можно переопределять)
    2) если виртуальный метод переопределен в производном классе, то обьекты 
    этого класса могут получить доступ к варианту метода базового класса с помощью 
    видимости
    3) Виртуальный метод не может быть статическим но может быть дружественным

Для переопределения виртуальной функции в производном классе она может быть определена с ключевым 
    словом override, которое помещается после списка параметров функции

Если для функции обьявленой со спецификатором override в производном классе 
    такой функции нет, то будет ошибка

Причины использования:
    1) контроль компилятора правильности использования множества виртуальных функций
    2) предоставляется дополнительная инофрмация
    3) снижается количество ошибок
    
*/

#include <iostream>

using namespace std;

class Pers{
protected:
    string name;
    int age;
public:
    Pers(string n, int a){
        name = n; 
        age = a;
    }
    virtual void display(){
        cout << name << "\n" << age << "\n";
    }
};

class Employee: public Pers{
private:
    string comp;
public:
    Employee(string n, int a, string c): Pers(n, a){
        comp = c;
    }
    void display() override{
        cout << name << "\n" << age << "\n" << comp << "\n";
    }
};


int main(){



    system("pause");
    return 0; 
}